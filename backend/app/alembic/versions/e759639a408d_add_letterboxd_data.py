"""add letterboxd data

Revision ID: e759639a408d
Revises: f947e046d6bb
Create Date: 2025-08-31 13:40:01.558323

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'e759639a408d'
down_revision = 'f947e046d6bb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. Clean up conflicting rows first
    conn = op.get_bind()

    # Delete all rows with theatre set (non-null and non-empty)
    conn.execute(sa.text("""
        DELETE FROM showtime
        WHERE theatre IS NOT NULL AND theatre != ''
    """))


    op.drop_constraint('uq_showtime_unique_fields', 'showtime', type_='unique')
    op.create_unique_constraint('uq_showtime_unique_fields', 'showtime', ['cinema_id', 'datetime', 'movie_id'])
    op.drop_column('showtime', 'theatre')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('showtime', sa.Column('theatre', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint('uq_showtime_unique_fields', 'showtime', type_='unique')
    op.create_unique_constraint('uq_showtime_unique_fields', 'showtime', ['cinema_id', 'datetime', 'theatre', 'movie_id'])
    # ### end Alembic commands ###
